// Copyright 2025 Redpanda Data, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v1.6.0 with parameter "target=ts,import_extension=,js_import_style=legacy_commonjs"
// @generated from file redpanda/core/common/acl.proto (package redpanda.core.common, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";

/**
 * / The ACL resource types
 *
 * @generated from enum redpanda.core.common.ACLResource
 */
export enum ACLResource {
  /**
   * @generated from enum value: ACL_RESOURCE_UNSPECIFIED = 0;
   */
  ACL_RESOURCE_UNSPECIFIED = 0,

  /**
   * Wildcard for selecting any ACL resource
   *
   * @generated from enum value: ACL_RESOURCE_ANY = 1;
   */
  ACL_RESOURCE_ANY = 1,

  /**
   * Cluster wide resource
   *
   * @generated from enum value: ACL_RESOURCE_CLUSTER = 2;
   */
  ACL_RESOURCE_CLUSTER = 2,

  /**
   * Consumer group resource
   *
   * @generated from enum value: ACL_RESOURCE_GROUP = 3;
   */
  ACL_RESOURCE_GROUP = 3,

  /**
   * Topic resource
   *
   * @generated from enum value: ACL_RESOURCE_TOPIC = 4;
   */
  ACL_RESOURCE_TOPIC = 4,

  /**
   * Transaction ID resource
   *
   * @generated from enum value: ACL_RESOURCE_TXN_ID = 5;
   */
  ACL_RESOURCE_TXN_ID = 5,

  /**
   * Schema Registry subject resource
   *
   * @generated from enum value: ACL_RESOURCE_SR_SUBJECT = 6;
   */
  ACL_RESOURCE_SR_SUBJECT = 6,

  /**
   * Schema Registry wide resource
   *
   * @generated from enum value: ACL_RESOURCE_SR_REGISTRY = 7;
   */
  ACL_RESOURCE_SR_REGISTRY = 7,

  /**
   * Wildcard to match any SR ACL resource
   *
   * @generated from enum value: ACL_RESOURCE_SR_ANY = 8;
   */
  ACL_RESOURCE_SR_ANY = 8,
}
// Retrieve enum metadata with: proto3.getEnumType(ACLResource)
proto3.util.setEnumType(ACLResource, "redpanda.core.common.ACLResource", [
  { no: 0, name: "ACL_RESOURCE_UNSPECIFIED" },
  { no: 1, name: "ACL_RESOURCE_ANY" },
  { no: 2, name: "ACL_RESOURCE_CLUSTER" },
  { no: 3, name: "ACL_RESOURCE_GROUP" },
  { no: 4, name: "ACL_RESOURCE_TOPIC" },
  { no: 5, name: "ACL_RESOURCE_TXN_ID" },
  { no: 6, name: "ACL_RESOURCE_SR_SUBJECT" },
  { no: 7, name: "ACL_RESOURCE_SR_REGISTRY" },
  { no: 8, name: "ACL_RESOURCE_SR_ANY" },
]);

/**
 * / The ACL pattern type
 *
 * @generated from enum redpanda.core.common.ACLPattern
 */
export enum ACLPattern {
  /**
   * @generated from enum value: ACL_PATTERN_UNSPECIFIED = 0;
   */
  ACL_PATTERN_UNSPECIFIED = 0,

  /**
   * Wildcard to match any pattern
   *
   * @generated from enum value: ACL_PATTERN_ANY = 1;
   */
  ACL_PATTERN_ANY = 1,

  /**
   * Match a literal string
   *
   * @generated from enum value: ACL_PATTERN_LITERAL = 2;
   */
  ACL_PATTERN_LITERAL = 2,

  /**
   * Match a prefix
   *
   * @generated from enum value: ACL_PATTERN_PREFIXED = 3;
   */
  ACL_PATTERN_PREFIXED = 3,

  /**
   * Match serves as a catch-all for all the names of a topic
   * the principal is authorized to access
   *
   * @generated from enum value: ACL_PATTERN_MATCH = 4;
   */
  ACL_PATTERN_MATCH = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(ACLPattern)
proto3.util.setEnumType(ACLPattern, "redpanda.core.common.ACLPattern", [
  { no: 0, name: "ACL_PATTERN_UNSPECIFIED" },
  { no: 1, name: "ACL_PATTERN_ANY" },
  { no: 2, name: "ACL_PATTERN_LITERAL" },
  { no: 3, name: "ACL_PATTERN_PREFIXED" },
  { no: 4, name: "ACL_PATTERN_MATCH" },
]);

/**
 * / The ACL operation to match
 *
 * @generated from enum redpanda.core.common.ACLOperation
 */
export enum ACLOperation {
  /**
   * @generated from enum value: ACL_OPERATION_UNSPECIFIED = 0;
   */
  ACL_OPERATION_UNSPECIFIED = 0,

  /**
   * @generated from enum value: ACL_OPERATION_ANY = 1;
   */
  ACL_OPERATION_ANY = 1,

  /**
   * @generated from enum value: ACL_OPERATION_READ = 2;
   */
  ACL_OPERATION_READ = 2,

  /**
   * @generated from enum value: ACL_OPERATION_WRITE = 3;
   */
  ACL_OPERATION_WRITE = 3,

  /**
   * @generated from enum value: ACL_OPERATION_CREATE = 4;
   */
  ACL_OPERATION_CREATE = 4,

  /**
   * @generated from enum value: ACL_OPERATION_REMOVE = 5;
   */
  ACL_OPERATION_REMOVE = 5,

  /**
   * @generated from enum value: ACL_OPERATION_ALTER = 6;
   */
  ACL_OPERATION_ALTER = 6,

  /**
   * @generated from enum value: ACL_OPERATION_DESCRIBE = 7;
   */
  ACL_OPERATION_DESCRIBE = 7,

  /**
   * @generated from enum value: ACL_OPERATION_CLUSTER_ACTION = 8;
   */
  ACL_OPERATION_CLUSTER_ACTION = 8,

  /**
   * @generated from enum value: ACL_OPERATION_DESCRIBE_CONFIGS = 9;
   */
  ACL_OPERATION_DESCRIBE_CONFIGS = 9,

  /**
   * @generated from enum value: ACL_OPERATION_ALTER_CONFIGS = 10;
   */
  ACL_OPERATION_ALTER_CONFIGS = 10,

  /**
   * @generated from enum value: ACL_OPERATION_IDEMPOTENT_WRITE = 11;
   */
  ACL_OPERATION_IDEMPOTENT_WRITE = 11,
}
// Retrieve enum metadata with: proto3.getEnumType(ACLOperation)
proto3.util.setEnumType(ACLOperation, "redpanda.core.common.ACLOperation", [
  { no: 0, name: "ACL_OPERATION_UNSPECIFIED" },
  { no: 1, name: "ACL_OPERATION_ANY" },
  { no: 2, name: "ACL_OPERATION_READ" },
  { no: 3, name: "ACL_OPERATION_WRITE" },
  { no: 4, name: "ACL_OPERATION_CREATE" },
  { no: 5, name: "ACL_OPERATION_REMOVE" },
  { no: 6, name: "ACL_OPERATION_ALTER" },
  { no: 7, name: "ACL_OPERATION_DESCRIBE" },
  { no: 8, name: "ACL_OPERATION_CLUSTER_ACTION" },
  { no: 9, name: "ACL_OPERATION_DESCRIBE_CONFIGS" },
  { no: 10, name: "ACL_OPERATION_ALTER_CONFIGS" },
  { no: 11, name: "ACL_OPERATION_IDEMPOTENT_WRITE" },
]);

/**
 * / ACL permission types
 *
 * @generated from enum redpanda.core.common.ACLPermissionType
 */
export enum ACLPermissionType {
  /**
   * @generated from enum value: ACL_PERMISSION_TYPE_UNSPECIFIED = 0;
   */
  ACL_PERMISSION_TYPE_UNSPECIFIED = 0,

  /**
   * @generated from enum value: ACL_PERMISSION_TYPE_ANY = 1;
   */
  ACL_PERMISSION_TYPE_ANY = 1,

  /**
   * @generated from enum value: ACL_PERMISSION_TYPE_ALLOW = 2;
   */
  ACL_PERMISSION_TYPE_ALLOW = 2,

  /**
   * @generated from enum value: ACL_PERMISSION_TYPE_DENY = 3;
   */
  ACL_PERMISSION_TYPE_DENY = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(ACLPermissionType)
proto3.util.setEnumType(ACLPermissionType, "redpanda.core.common.ACLPermissionType", [
  { no: 0, name: "ACL_PERMISSION_TYPE_UNSPECIFIED" },
  { no: 1, name: "ACL_PERMISSION_TYPE_ANY" },
  { no: 2, name: "ACL_PERMISSION_TYPE_ALLOW" },
  { no: 3, name: "ACL_PERMISSION_TYPE_DENY" },
]);

